- name: Create MoonStack name
  shell: echo MoonStack-ansible-$(pwgen -ns 6 -1)
  register: moon_name

- name: Import OpenStack authentication variables
  include_vars:
    file: roles/deploy/vars/os_auth.yaml

- name: Create security group
  os_security_group:
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      os_user_domain_name: "{{ os_user_domain_name }}"
    name: sg-moon-any
    description: moon any-any

- name: Add rules to security group
  os_security_group_rule:
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      os_user_domain_name: "{{ os_user_domain_name }}"
    security_group: sg-moon-any
    remote_ip_prefix: 0.0.0.0/0

- name: Create network
  os_network:
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      os_user_domain_name: "{{ os_user_domain_name }}"
    name: network-moon

- name: Create subnet
  os_subnet:
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      os_user_domain_name: "{{ os_user_domain_name }}"
    network_name: network-moon
    name: subnet-moon
    cidr: 192.168.0.0/24
    dns_nameservers:
      - 1.1.1.1
      - 8.8.8.8

- name: Create router
  os_router:
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      os_user_domain_name: "{{ os_user_domain_name }}"
    name: router-moon
    interfaces:
      - subnet-moon

- name: Launch an instance
  os_server:
    auth:
      auth_url: "{{ auth_url }}"
      username: "{{ username }}"
      password: "{{ password }}"
      project_name: "{{ project_name }}"
      os_user_domain_name: "{{ os_user_domain_name }}"
    name: "{{ moon_name.stdout }}"
    region_name: "{{ region_name }}"
    availability_zone: "{{ availability_zone }}"
    image: "{{ image }}"
    boot_from_volume: yes
    volume_size: "{{ volume_size }}"
    key_name: "{{ key_name }}"
    timeout: 200
    flavor: "{{ flavor }}"
    security_groups: sg-moon-any
    network: network-moon
  register: moon

- name: Add instance to inventory
  add_host:
    hostname: "{{ moon_name.stdout }}"
    ansible_host: "{{ moon.server.public_v4 }}"
    groups: MOON
